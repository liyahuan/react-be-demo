
一、React route dom 使用：

	1、 hashRoute VS browseRouter 的区别

	   browseRouter 是通过H5的history api来实现路由的

	   hashTRouter  是通过#后面的哈希来实现路由的变化的

    2、 动态路由的信息使用Hooks方法来获取

        eg: 
        useParams  const params = useParams();

        useLocation  const location = useLocation()

        userParams还有useLocation 返回的都是一个[object,object] 即包含对象的数组;

    3、 Tips:题外话 js的模板字符串，自己以前只会拼接string类型的数据。如果数据是数组类型呢？或者是包含对象的数组类型呢？
        AI告诉了我。
        
        string类型 拼接语法 `nihao${name}`
        
        数组类型  拼接语法  

        (1)使用 JSON.stringify(myArray)     `[${JSON.stringify(myArray)}]` 先转换成string字符换类型，再插入模板字符串中，模板字符串可以自己加方括号来包裹数组
        (2)自己加方括号包裹数组 `[${myArray}]`

        带有对象的数组类型，就直接使用JSON.stringify(myArray) 这个方法了。

二、Vite 默认的端口号是5173, 默认监听的是本地主机(localhost)，需要加上--host才能启动局域网可以访问的服务。

三、windows默认只暴露指定的端口在外面，需要自己去修改规则，暴露自己想暴露的端口在外面。

四、React的hooks，useState可以更改变量的状态，用它可以实现定义一个变量，并且更改变量。
    1、 eg: const [error, setError] = useState(null); 其中，error是数据状态(变量)，
    setError是修改数据状态的方法(直接定义变量值的方法)。useState是初始值。
    2、 useState([])
    3、 useState 不可以在for/if/其他函数中执行，跟React的hooks执行的顺序有关系。
    只能写到函数的根目录下。
    4、/Layout/index.tsx 这个文件夹下面，使用了useState，useEffect,usetRef 3个钩子 Hooks。
五、useEffect 
    1、 无依赖项的时候，组件初始化的时候，先执行一次。等到数据变化的时候，再次执行。
    2、 有依赖项的时候：
        添加空数组依赖项的时候：组件只在初始化时执行 useEffect( ()=>{ console.log('[]就是空数组依赖项') },[] )
        数组不为空，是指定值的时候，组件初始化时执行一次，依赖特定项发生变化时，再次执行。
    useEffect是提供副作用处理的、除了主作用，都是副作用。由渲染引起的副作用。
    React State控制非React组件，设置服务器连接，或在组件出现在屏幕上时，发送分析日志。
六、useRef
    选定Dom元素



七、关于tsx文件的export, import
    1、 带有default的 是默认导出，import的时候，直接导入
    2、 不带default的是普通导出，import的时候，要放在{}里面，